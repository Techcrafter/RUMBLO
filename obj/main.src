; Zilog eZ80 ANSI C Compiler Release 3.4
; -optsize -noreduceopt -nomodsect -peephole -globalopt
; -localcse -const=ROM 
	FILE	"SRC\MAIN.C"
	.assume ADL=1
	SEGMENT CODE
;    1	#include <fileioc.h>
;    2	#include <fontlibc.h>
;    3	#include "gfx/gfx.h"
;    4	#include <graphx.h>
;    5	#include <stdbool.h>
;    6	#include <stddef.h>
;    7	#include <stdint.h>
;    8	#include <stdio.h>
;    9	#include <stdlib.h>
;   10	#include <string.h>
;   11	#include <tice.h>
;   12	
;   13	extern unsigned char tilemap_map[];
;   14	
;   15	#define TILE_WIDTH          16
;   16	#define TILE_HEIGHT         16
;   17	
;   18	#define TILEMAP_WIDTH       160
;   19	#define TILEMAP_HEIGHT      120
;   20	
;   21	#define TILEMAP_DRAW_WIDTH  20
;   22	#define TILEMAP_DRAW_HEIGHT 15
;   23	
;   24	#define Y_OFFSET            0
;   25	#define X_OFFSET            0
;   26	
;   27	int getXBlock(int xBlock)
;   28	{
_getXBlock:
	CALL	__frameset0
;   29		return TILE_WIDTH * TILEMAP_DRAW_WIDTH * xBlock;
	LD	BC,320
	LD	HL,(IX+6)
	CALL	__imuls
;   30	}
	LD	SP,IX
	POP	IX
	RET	


;**************************** _getXBlock ***************************
;Name                         Addr/Register   Size   Type
;xBlock                                IX+6      3   parameter


; Stack Frame Size: 9 (bytes)
;       Spill Code: 0 (instruction)


;   31	
;   32	int getYBlock(int yBlock)
;   33	{
_getYBlock:
	CALL	__frameset0
;   34		return TILE_HEIGHT * TILEMAP_DRAW_HEIGHT * yBlock;
	LD	HL,(IX+6)
	LD	A,240
	CALL	__imul_b
;   35	}
	LD	SP,IX
	POP	IX
	RET	


;**************************** _getYBlock ***************************
;Name                         Addr/Register   Size   Type
;yBlock                                IX+6      3   parameter


; Stack Frame Size: 9 (bytes)
;       Spill Code: 0 (instruction)


;   36	
;   37	int main(void)
;   38	{
_main:
	LD	HL,-18
	CALL	__frameset
;   39		sk_key_t key;
;   40		
;   41	    gfx_tilemap_t tilemap;
;   42		
;   43		tilemap.map         = tilemap_map;
	LD	BC,_tilemap_map
	LD	(IX+-18),BC
;   44	    tilemap.tiles       = tileset_tiles;
	LD	BC,_tileset_tiles_data
	LD	(IX+-15),BC
;   45	    tilemap.type_width  = gfx_tile_16_pixel;
	LD	(IX+-8),4
;   46	    tilemap.type_height = gfx_tile_16_pixel;
	LD	(IX+-7),4
;   47	    tilemap.tile_height = TILE_HEIGHT;
	LD	(IX+-12),16
;   48	    tilemap.tile_width  = TILE_WIDTH;
	LD	(IX+-11),16
;   49	    tilemap.draw_height = TILEMAP_DRAW_HEIGHT;
	LD	(IX+-10),15
;   50	    tilemap.draw_width  = TILEMAP_DRAW_WIDTH;
	LD	(IX+-9),20
;   51	    tilemap.height      = TILEMAP_HEIGHT;
	LD	(IX+-6),120
;   52	    tilemap.width       = TILEMAP_WIDTH;
	LD	(IX+-5),160
;   53	    tilemap.y_loc       = Y_OFFSET;
	LD	(IX+-4),0
;   54	    tilemap.x_loc       = X_OFFSET;
	LD	BC,0
	LD	(IX+-3),BC
;   55		
;   56		gfx_Begin();
	CALL	_gfx_Begin
;   57		
;   58		gfx_SetPalette(global_palette, sizeof_global_palette, 0);
	LD	BC,0
	PUSH	BC
	LD	BC,172
	PUSH	BC
	LD	BC,_global_palette
	PUSH	BC
	CALL	_gfx_SetPalette
	POP	BC
	POP	BC
	POP	BC
;   59	    gfx_SetColor(0);
	LD	BC,0
	PUSH	BC
	CALL	_gfx_SetColor
	POP	BC
;   60	    gfx_SetTextFGColor(gfx_blue);
	LD	BC,16
	PUSH	BC
	CALL	_gfx_SetTextFGColor
	POP	BC
;   61	    gfx_SetTextBGColor(0);
	LD	BC,0
	PUSH	BC
	CALL	_gfx_SetTextBGColor
	POP	BC
;   62		
;   63		gfx_SetDrawBuffer();
	LD	BC,1
	PUSH	BC
	CALL	_gfx_SetDraw
	POP	BC
;   64		
;   65		gfx_SetMonospaceFont(8);
	LD	BC,8
	PUSH	BC
	CALL	_gfx_SetMonospaceFont
	POP	BC
;   66		
;   67		gfx_Tilemap(&tilemap, getXBlock(0), getYBlock(0));
	LD	BC,0
	PUSH	BC
	CALL	_getYBlock
	POP	BC
	PUSH	HL
	LD	BC,0
	PUSH	BC
	CALL	_getXBlock
	POP	BC
	PUSH	HL
	PEA	IX+-18
	CALL	_gfx_Tilemap
	POP	BC
	POP	BC
	POP	BC
;   68		gfx_SwapDraw();
	CALL	_gfx_SwapDraw
;   69		
;   70		delay(3000);
	LD	BC,3000
	PUSH	BC
	CALL	_delay
	POP	BC
;   71		
;   72		gfx_Tilemap(&tilemap, getXBlock(0), getYBlock(0));
	LD	BC,0
	PUSH	BC
	CALL	_getYBlock
	POP	BC
	PUSH	HL
	LD	BC,0
	PUSH	BC
	CALL	_getXBlock
	POP	BC
	PUSH	HL
	PEA	IX+-18
	CALL	_gfx_Tilemap
	POP	BC
	POP	BC
	POP	BC
;   73		gfx_PrintStringXY("Press [enter] to begin...", 60, 200);
	LD	BC,200
	PUSH	BC
	LD	BC,60
	PUSH	BC
	LD	BC,L__2
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;   74		gfx_SwapDraw();
	CALL	_gfx_SwapDraw
;   75		while(os_GetCSC() != sk_Enter);
L_3:
	CALL	_os_GetCSC
	UEXT	HL
	LD	L,A
	OR	A,A
	LD	BC,9
	SBC	HL,BC
	JR	NZ,L_3
;   76		
;   77		gfx_Tilemap(&tilemap, getXBlock(1), getYBlock(0));
	LD	BC,0
	PUSH	BC
	CALL	_getYBlock
	POP	BC
	PUSH	HL
	LD	BC,1
	PUSH	BC
	CALL	_getXBlock
	POP	BC
	PUSH	HL
	PEA	IX+-18
	CALL	_gfx_Tilemap
	POP	BC
	POP	BC
	POP	BC
;   78		gfx_SetTextFGColor(gfx_red);
	LD	BC,224
	PUSH	BC
	CALL	_gfx_SetTextFGColor
	POP	BC
;   79	    gfx_SetTextBGColor(0);
	LD	BC,0
	PUSH	BC
	CALL	_gfx_SetTextBGColor
	POP	BC
;   80		gfx_PrintStringXY("Quit game", 110, 100);
	LD	BC,100
	PUSH	BC
	LD	BC,110
	PUSH	BC
	LD	BC,L__4
	PUSH	BC
	CALL	_gfx_PrintStringXY
	POP	BC
	POP	BC
	POP	BC
;   81		gfx_SwapDraw();
	CALL	_gfx_SwapDraw
;   82		
;   83		while(os_GetCSC() != sk_Enter);
L_6:
	CALL	_os_GetCSC
	UEXT	HL
	LD	L,A
	OR	A,A
	LD	BC,9
	SBC	HL,BC
	JR	NZ,L_6
;   84		
;   85		gfx_End();
	CALL	_gfx_End
	OR	A,A
;   86		return 0;
	SBC	HL,HL
;   87	}
	LD	SP,IX
	POP	IX
	RET	


;**************************** _main ***************************
;Name                         Addr/Register   Size   Type
;_gfx_End                            IMPORT  -----   function
;_os_GetCSC                          IMPORT  -----   function
;_gfx_PrintStringXY                  IMPORT  -----   function
;_delay                              IMPORT  -----   function
;_gfx_SwapDraw                       IMPORT  -----   function
;_gfx_Tilemap                        IMPORT  -----   function
;_gfx_SetMonospaceFont               IMPORT  -----   function
;_gfx_SetDraw                        IMPORT  -----   function
;_gfx_SetTextBGColor                 IMPORT  -----   function
;_gfx_SetTextFGColor                 IMPORT  -----   function
;_gfx_SetColor                       IMPORT  -----   function
;_global_palette                     IMPORT    172   variable
;_gfx_SetPalette                     IMPORT  -----   function
;_gfx_Begin                          IMPORT  -----   function
;_tileset_tiles_data                 IMPORT     57   variable
;_tilemap_map                        IMPORT  unknown variable
;tilemap                              IX-18     18   variable


; Stack Frame Size: 24 (bytes)
;       Spill Code: 0 (instruction)


	SEGMENT STRSECT
L__2:
	DB	"Press [enter] to begin..."
	DB	0
L__4:
	DB	"Quit game"
	DB	0
	XREF _tilemap_map:ROM
	XREF _gfx_SetMonospaceFont:ROM
	XREF _gfx_SetTextBGColor:ROM
	XREF _gfx_SetTextFGColor:ROM
	XREF _gfx_PrintStringXY:ROM
	XREF _gfx_SwapDraw:ROM
	XREF _gfx_SetDraw:ROM
	XREF _gfx_SetPalette:ROM
	XREF _gfx_SetColor:ROM
	XREF _gfx_Tilemap:ROM
	XREF _gfx_End:ROM
	XREF _gfx_Begin:ROM
	XREF _tileset_tiles_data:ROM
	XREF _global_palette:ROM
	XREF _os_GetCSC:ROM
	XREF _delay:ROM
	XREF __imuls:ROM
	XREF __frameset0:ROM
	XREF __frameset:ROM
	XREF __imul_b:ROM
	XDEF _main
	XDEF _getYBlock
	XDEF _getXBlock
	END
